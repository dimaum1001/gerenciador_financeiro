# Docker Compose para Produção
version: '3.8'

services:
  # PostgreSQL Database - Produção
  db:
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-this-password-in-production}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    ports: [] # Remove exposição da porta em produção
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # FastAPI Backend - Produção
  api:
    build:
      target: production
    environment:
      - DATABASE_URL=postgresql+psycopg://postgres:${POSTGRES_PASSWORD:-change-this-password-in-production}@db:5432/finance
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-1440}
      - ENVIRONMENT=production
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - SENTRY_DSN=${SENTRY_DSN:-}
    volumes: []
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    command: >
      sh -c "
        python -m alembic upgrade head &&
        gunicorn app.main:app -w 4 -k uvicorn.workers.UvicornWorker -b 0.0.0.0:8000 --access-logfile - --error-logfile -
      "

  # React Frontend - Produção
  web:
    build:
      target: production
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_APP_NAME=${VITE_APP_NAME:-Gerenciador Financeiro}
      - VITE_APP_VERSION=${VITE_APP_VERSION:-1.0.0}
    volumes: []
    restart: always
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: finance_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - finance_network
    depends_on:
      - api
      - web
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # Redis - Produção
  redis:
    restart: always
    ports: [] # Remove exposição da porta em produção
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    command: >
      redis-server
      --appendonly yes
      --maxmemory 200mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000

volumes:
  postgres_prod_data:
    driver: local
    name: finance_postgres_prod_data
  nginx_cache:
    driver: local
    name: finance_nginx_cache
