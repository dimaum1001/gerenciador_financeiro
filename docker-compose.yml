version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: finance_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: finance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: America/Sao_Paulo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - finance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d finance"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # FastAPI Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: finance_api
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@db:5432/finance
      - SECRET_KEY=your-super-secret-key-change-in-production-min-32-chars
      - ACCESS_TOKEN_EXPIRE_MINUTES=4320
      - TZ=America/Sao_Paulo
      - PYTHONPATH=/app
      - ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3000
      - LOG_LEVEL=INFO
    volumes:
      - ./backend:/app
      - backend_storage:/app/storage
    ports:
      - "8000:8000"
    networks:
      - finance_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        python -m alembic upgrade head &&
        echo 'Running database seeds...' &&
        python scripts/seed_data.py &&
        echo 'Starting FastAPI server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # React Frontend
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: finance_web
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
      - VITE_APP_NAME=Gerenciador Financeiro
      - VITE_APP_VERSION=1.0.0
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    networks:
      - finance_network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: npm run dev -- --host 0.0.0.0

  # Redis (opcional para cache e sess√µes futuras)
  redis:
    image: redis:7-alpine
    container_name: finance_redis
    restart: unless-stopped
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - finance_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
    driver: local
    name: finance_postgres_data
  redis_data:
    driver: local
    name: finance_redis_data
  backend_storage:
    driver: local
    name: finance_backend_storage

networks:
  finance_network:
    driver: bridge
    name: finance_network
